'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = gulpStylelintConsoleReporterInit;

var _gulpUtil = require('gulp-util');

var _gulpUtil2 = _interopRequireDefault(_gulpUtil);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

/**
 * Logs an issue to the console.
 * @param  {Object}    message Stylelint message.
 * @return {undefined}         Nothing is returned.
 */
function consoleMessageReporter(message) {
  var errorCoords = _gulpUtil2.default.colors.gray(message.line + ':' + message.column);
  var errorNotice = message.severity === 'error' ? _gulpUtil2.default.colors.red('error') : _gulpUtil2.default.colors.yellow('warning');

  _gulpUtil2.default.log(errorCoords + ' ' + errorNotice + ' ' + message.text);
}

/**
 * Logs a Stylelint result source and all its messages.
 * @param  {Object}    result Stylelint result.
 * @return {undefined}        Nothing is returned.
 */
/**
 * gulp-stylelint console reporter.
 * @module gulp-stylelint-console-reporter
 */

function consoleResultReporter(result) {
  _gulpUtil2.default.log(_gulpUtil2.default.colors.underline(result.opts.from));
  result.messages.filter(function (message) {
    return message.plugin === 'stylelint';
  }).forEach(consoleMessageReporter);
}

/**
 * Reporter initialization function.
 * @return {Function} Reporter function.
 */
function gulpStylelintConsoleReporterInit() {

  /**
   * Takes a list of Stylelint results and outputs them to the console.
   * @param  {Array<Object>} resultList Stylelint result list.
   * @return {undefined}                Nothing is returned.
   */
  return function gulpStylelintConsoleReporter(resultList) {
    resultList.filter(function (result) {
      return result.messages.length > 0;
    }).forEach(consoleResultReporter);
  };
}